import org.apache.tools.ant.filters.ReplaceTokens
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    
}

allprojects {

	version = pluginVersion
	group = pluginGroup	

	repositories {
		mavenCentral()
  	  	maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" }
   	 	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
   	 	maven { url 'https://jitpack.io' }
    }
        
	processResources {
    	from (sourceSets.main.resources) {
     	   include 'plugin.yml'
    	    filter(ReplaceTokens, tokens: ['version' : project.version])
		}
	}
}

dependencies {

	compileOnly 'org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT'
	
	implementation 'com.github.TheDutchMC:HaroTorch:v1-SNAPSHOT'
	implementation 'commons-io:commons-io:2.6'
	implementation 'dev.array21:bukkit-reflection-util:1.1.1'
	implementation 'dev.array21:classvalidator:1.0.0'
	implementation 'dev.array21:httplib:1.2.2'
}

processResources  {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

task testJar(type: ShadowJar) {
	description 'Build a test Jar'
	archiveClassifier = 'DEV'

	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]
	
	relocate 'org.apache.commons.io', 'nl.thedutchmc.harotorch.libs.org.apache.commons.io'
	relocate 'nl.thedutchmc.httplib', 'nl.thedutchmc.harotorch.libs.nl.thedutchmc.httplib'
	
	destinationDirectory = file("$rootDir/server/plugins")
}

task releaseJar(type: ShadowJar) {
	description 'Build a release Jar'
	archiveClassifier = 'RELEASE'

	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]
	
	relocate 'org.apache.commons.io', 'nl.thedutchmc.harotorch.libs.org.apache.commons.io'
	relocate 'nl.thedutchmc.httplib', 'nl.thedutchmc.harotorch.libs.nl.thedutchmc.httplib'
	
	destinationDirectory = file("$rootDir/releases")
}

task ghActions(type: ShadowJar) {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	description 'GitHub Actions task. Not used for regular development'
	version = ''
	archiveClassifier = ''
	archiveBaseName = 'output'

	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]
	
	relocate 'org.apache.commons.io', 'nl.thedutchmc.harotorch.libs.org.apache.commons.io'
	relocate 'nl.thedutchmc.httplib', 'nl.thedutchmc.harotorch.libs.nl.thedutchmc.httplib'

	destinationDirectory = file("$rootDir/actions")
}